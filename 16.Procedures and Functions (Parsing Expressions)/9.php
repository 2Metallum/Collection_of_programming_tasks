<?php

/*
 * 16.9. Проверить правильность расстановки скобок в строке
        S (текст в строке S определяется по тем же правилам,
        что и в предыдущем задании). Если текст составлен
        правильно, то вывести 0; в противном случае вывести
        номер первой ошибочной скобки или –1, если в строке
        недостаточно закрывающих скобок.
*/

function checkBrackets($s) {
    // Создаем пустой стек
    $stack = [];

    // Определяем регулярное выражение для поиска скобок
    $bracket_regex = '/[\(\)\[\]\{\}]/';

    // Проходим по каждому символу в строке
    for ($i = 0; $i < strlen($s); $i++) {
        $char = $s[$i];

        // Если символ является скобкой, добавляем его в стек
        if (preg_match($bracket_regex, $char)) {
            array_push($stack, $char);
        }

        // Если символ является закрывающей скобкой, проверяем, соответствует ли она последней открывающей скобке в стеке
        if ($char === ')' || $char === ']' || $char === '}') {
            // Если стек пустой, значит, скобки расставлены неправильно
            if (count($stack) === 0) {
                return -1;
            }

            $last_bracket = array_pop($stack);

            // Если последняя открывающая скобка не соответствует закрывающей скобке, значит, скобки расставлены неправильно
            if (($last_bracket === '(' && $char !== ')') || ($last_bracket === '[' && $char !== ']') || ($last_bracket === '{' && $char !== '}')) {
                return -1;
            }
        }
    }

    // Если стек не пустой, значит, скобки расставлены неправильно
    if (count($stack) > 0) {
        return -1;
    }

    return 0;
}

